; Based on CPSC 110 (@assignment bank/naturals-p3) - "odd-from-n-solution.rkt"
; https://cs110.students.cs.ubc.ca/bank/
(include-book "acl2s/cgen/top" :dir :system :ttags :all) ; Import CGEN
(acl2s-defaults :set testing-enabled t)                  ; Enable counter examples


; Produce a list of all the odd numbers from natural number n down to 1.
; 1. All elements are odd
; 2. The list should have ceil(n/2) elements
; 3. Output is equivalent to removing all even numbers from n to 1
(defun odd-from-n (n)
  (cond ((zp n) nil)
        (T
         (if (evenp n) (odd-from-n (- n 1))
             (cons n (odd-from-n (- n 1)))))))

; Prove 1:
(defthm odd-from-n-all-elements-are-odd
  (implies
   (member x (odd-from-n n))
   (oddp x)))
  

; Prove 2:
(defthm odd-from-n-has-correct-num-elements
  (implies (natp n)
      (equal
        (len (odd-from-n n))
        (if (oddp n) (/ (+ n 1) 2)   ; Trying to use (ceiling n 2) failed
             (/ n 2)))))

; Helper function to generate odds-from-n-to-1
(defun numbers-n-to-1 (n)
  (if (zp n)
    nil
    (cons n (numbers-n-to-1 (- n 1)))))

; Generated by Gemini Advanced
(defun remove-evens (lst)
  (if (endp lst) ; Base case: If the list is empty, return the empty list
      nil
      (if (evenp (car lst))  ; Recursive case
          (remove-evens (cdr lst)) ; Remove the even head, recurse on tail
          (cons (car lst) (remove-evens (cdr lst)))))) ; Keep odd head, recurse

(defun n-to-1-remove-evens (n)
  (remove-evens (numbers-n-to-1 n)))  ; (reverse (odds (reverse (remove-evens n)))) didn't work, probably related to rev-rev

; Prove 3: Equivalent to removing evens from n to 1
(defthm odd-from-n-equals-odds-n-to-1
  (equal (odd-from-n n) (n-to-1-remove-evens n)))#|ACL2s-ToDo-Line|#

           

#|S
; Helper that checks all elements are odd
(defun all-elements-odd (lst)
  (if (endp lst)
    T
    (if (oddp (car lst))
        (all-elements-odd (cdr lst))
        nil)))

; Check all-elements-odd function is correct (not sure if this is a good way to do it)
(defthm all-elements-odd-empty-is-true
  (implies
   (endp lst)
   (all-elements-odd lst)))
|#